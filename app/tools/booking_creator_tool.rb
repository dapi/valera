# frozen_string_literal: true

# Tool –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –æ—Å–º–æ—Ç—Ä —á–µ—Ä–µ–∑ LLM tool calling mechanism
class BookingCreatorTool
  class << self
    def call(parameters:, context:)
      # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ TDD-002b
      # LLM —Å–∞–º–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞ (Product Constitution compliance)

      # –ò–∑–≤–ª–µ–∫–∞–µ–º telegram_user –∏ chat –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      telegram_user = context[:telegram_user]
      chat = context[:chat]

      # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏
      booking_data = {
        customer_name: parameters[:customer_name],
        customer_phone: normalize_phone(parameters[:customer_phone]),
        car_info: parameters[:car_info],
        preferred_date: parameters[:preferred_date],
        preferred_time: parameters[:preferred_time],
        created_at: Time.current.iso8601,
        booking_id: "##{SecureRandom.hex(4).upcase}"
      }

      booking = Booking.new(
        meta: booking_data,
        telegram_user: telegram_user,
        chat: chat
      )

      if booking.save
        # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä—Å–∫–∏–π —á–∞—Ç
        BookingNotificationJob.perform_later(booking)

        success_response(booking, booking_data)
      else
        error_response("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å: #{booking.errors.full_messages.join(', ')}")
      end
    rescue => e
      Rails.logger.error "BookingCreatorTool error: #{e.message}"
      Bugsnag.notify(e)
      error_response("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    end

    private

    def normalize_phone(phone)
      # –ü—Ä–∏–≤–æ–¥–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω –∫ —Ñ–æ—Ä–º–∞—Ç—É +7(XXX)XXX-XX-XX
      digits = phone.gsub(/\D/, '')
      if digits.length == 11
        formatted = "+7(#{digits[1..3]})#{digits[4..6]}-#{digits[7..8]}-#{digits[9..10]}"
      elsif digits.length == 10
        formatted = "+7(#{digits[0..2]})#{digits[3..5]}-#{digits[6..7]}-#{digits[8..9]}"
      else
        phone # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω
      end
    end

    def success_response(booking, booking_data)
      {
        success: true,
        message: format_success_message(booking_data),
        booking_id: booking.id
      }
    end

    def format_success_message(data)
      <<~MESSAGE
        ‚úÖ **–ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!**

        üìã **–î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏:**
        üë§ –ò–º—è: #{data[:customer_name]}
        üìû –¢–µ–ª–µ—Ñ–æ–Ω: #{data[:customer_phone]}
        üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å: #{format_car_info(data[:car_info])}
        ‚è∞ –í—Ä–µ–º—è: #{data[:preferred_date]} #{data[:preferred_time]}

        üìç **–ê–¥—Ä–µ—Å:** –≥. –ß–µ–±–æ–∫—Å–∞—Ä—ã, –Ø–¥—Ä–∏–Ω—Å–∫–æ–µ —à., 3

        üìû **–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏!**

        –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: #{data[:booking_id]}
      MESSAGE
    end

    def format_car_info(car_info)
      return "–ù–µ —É–∫–∞–∑–∞–Ω–æ" unless car_info.is_a?(Hash)

      brand = car_info['brand'] || car_info[:brand] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
      model = car_info['model'] || car_info[:model] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
      year = car_info['year'] || car_info[:year] || ''

      year_str = year.present? ? ", #{year}" : ""
      "#{brand} #{model}#{year_str}"
    end

    def error_response(message)
      {
        success: false,
        message: "‚ùå #{message}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –Ω–∞–ø—Ä—è–º—É—é."
      }
    end
  end
end