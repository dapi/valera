#!/usr/bin/env ruby

require 'ruby_llm'
require 'dotenv/load'

# –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Ruby LLM –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç-–±–æ—Ç–∞
class BasicChatBot
  def initialize(model = 'gpt-3.5-turbo')
    configure_llm
    @model = model
    @chats = {}  # –•—Ä–∞–Ω–µ–Ω–∏–µ —á–∞—Ç–æ–≤ –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  end

  def start
    puts "ü§ñ Ruby LLM Chat Bot –∑–∞–ø—É—â–µ–Ω!"
    puts "–ú–æ–¥–µ–ª—å: #{@model}"
    puts "–ö–æ–º–∞–Ω–¥—ã: /new, /model, /help, /exit"
    puts "-" * 50

    loop do
      print "> "
      input = gets.chomp

      case input
      when '/exit'
        puts "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
        break
      when '/help'
        show_help
      when '/new'
        start_new_chat
      when '/model'
        change_model
      when empty?
        next
      else
        process_message(input)
      end
    end
  end

  private

  def configure_llm
    RubyLLM.configure do |config|
      config.use_new_acts_as = true
      config.request_timeout = 120
      config.max_retries = 2

      # API –∫–ª—é—á–∏ (–∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ .env —Ñ–∞–π–ª–∞)
      config.openai_api_key = ENV['OPENAI_API_KEY']
      config.anthropic_api_key = ENV['ANTHROPIC_API_KEY']
      config.gemini_api_key = ENV['GEMINI_API_KEY']
      config.deepseek_api_key = ENV['DEEPSEEK_API_KEY']
      config.openrouter_api_key = ENV['OPENROUTER_API_KEY']
      config.mistral_api_key = ENV['MISTRAL_API_KEY']

      config.default_model = 'gpt-3.5-turbo'
      config.default_embedding_model = 'text-embedding-3-large'
      config.default_image_model = 'dall-e-3'
    end
  end

  def current_chat
    @current_chat ||= create_new_chat
  end

  def create_new_chat(system_prompt = nil)
    chat = RubyLLM.chat.new(
      model: @model,
      system: system_prompt || "–¢—ã - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–±—â–∞–µ—Ç—Å—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É."
    )

    @chats[chat.object_id] = chat
    @current_chat = chat
    chat
  end

  def process_message(message)
    begin
      print "ü§î –î—É–º–∞—é... "

      # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
      response = current_chat.say(message)

      puts "\nü§ñ #{response.content}"

      # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
      if response.usage
        tokens = response.usage[:total_tokens]
        puts "üí∞ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: #{tokens}"
      end

      puts
    rescue RubyLLM::AuthenticationError => e
      puts "\n‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: #{e.message}"
      puts "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π –≤ .env —Ñ–∞–π–ª–µ"
    rescue RubyLLM::RateLimitError => e
      puts "\n‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —á–µ—Ä–µ–∑ #{e.retry_after} —Å–µ–∫—É–Ω–¥"
      sleep(e.retry_after || 5)
      retry
    rescue RubyLLM::InvalidRequestError => e
      puts "\n‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å: #{e.message}"
    rescue RubyLLM::APIError => e
      puts "\n‚ùå –û—à–∏–±–∫–∞ API: #{e.message}"
    rescue => e
      puts "\n‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: #{e.message}"
      puts e.backtrace.first(3) if ENV['DEBUG']
    end
  end

  def start_new_chat
    puts "üÜï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞..."
    create_new_chat
    puts "‚úÖ –ù–æ–≤—ã–π —á–∞—Ç —Å–æ–∑–¥–∞–Ω"
  end

  def change_model
    puts "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
    models = list_available_models
    models.each_with_index do |model, index|
      puts "#{index + 1}. #{model[:name]} (#{model[:provider]})"
    end

    print "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å (1-#{models.size}): "
    choice = gets.chomp.to_i

    if choice.between?(1, models.size)
      @model = models[choice - 1][:id]
      create_new_chat
      puts "‚úÖ –ú–æ–¥–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: #{models[choice - 1][:name]}"
    else
      puts "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä"
    end
  end

  def list_available_models
    # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    [
      { id: 'gpt-3.5-turbo', name: 'GPT-3.5 Turbo', provider: 'OpenAI' },
      { id: 'gpt-4', name: 'GPT-4', provider: 'OpenAI' },
      { id: 'claude-sonnet-4', name: 'Claude Sonnet 4', provider: 'Anthropic' },
      { id: 'claude-haiku-3.5', name: 'Claude Haiku 3.5', provider: 'Anthropic' },
      { id: 'gemini-pro', name: 'Gemini Pro', provider: 'Google' },
      { id: 'deepseek-chat', name: 'DeepSeek Chat', provider: 'DeepSeek' }
    ]
  end

  def show_help
    puts <<~HELP
      üìñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:**

      /new - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç
      /model - –ò–∑–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å
      /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
      /exit - –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã

      üí° **–°–æ–≤–µ—Ç—ã:**
      ‚Ä¢ –ù–∞—á–Ω–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é /new
      ‚Ä¢ –ú–µ–Ω—è–π—Ç–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á
      ‚Ä¢ GPT-4 –ª—É—á—à–µ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á
      ‚Ä¢ Claude —Ö–æ—Ä–æ—à–æ –ø–æ–Ω–∏–º–∞–µ—Ç —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
      ‚Ä¢ Gemini –∏ DeepSeek - –±—é–¥–∂–µ—Ç–Ω—ã–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
    HELP
  end
end

# –ö–ª–∞—Å—Å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
class ChatScenarios
  def self.run_all_scenarios
    puts "üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Ruby LLM"
    puts "=" * 60

    configure_llm

    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
    demonstrate_text_generation

    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞
    demonstrate_code_generation

    # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
    demonstrate_translation

    # –°—Ü–µ–Ω–∞—Ä–∏–π 4: –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞
    demonstrate_text_analysis

    # –°—Ü–µ–Ω–∞—Ä–∏–π 5: –°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
    demonstrate_embeddings
  end

  private

  def self.configure_llm
    RubyLLM.configure do |config|
      config.openai_api_key = ENV['OPENAI_API_KEY']
      config.anthropic_api_key = ENV['ANTHROPIC_API_KEY']
      config.default_model = 'gpt-3.5-turbo'
    end
  end

  def self.demonstrate_text_generation
    puts "\nüìù –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞"
    puts "-" * 30

    chat = RubyLLM.chat.new(
      system: "–¢—ã - –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –ø–∏—Å–∞—Ç–µ–ª—å. –ü–∏—à–∏ –∫—Ä–∞—Ç–∫–∏–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã."
    )

    prompt = "–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏"

    print "ü§î –ó–∞–ø—Ä–æ—Å: #{prompt}\n"
    print "ü§ñ –û—Ç–≤–µ—Ç: "

    response = chat.say(prompt)
    puts response.content
    puts "üí∞ –¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: #{response.usage[:total_tokens]}" if response.usage
  end

  def self.demonstrate_code_generation
    puts "\nüíª –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞"
    puts "-" * 30

    chat = RubyLLM.chat.new(
      system: "–¢—ã - –æ–ø—ã—Ç–Ω—ã–π Ruby —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫. –ü–∏—à–∏ —á–∏—Å—Ç—ã–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∫–æ–¥."
    )

    prompt = "–ù–∞–ø–∏—à–∏ Ruby –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç—ã–º"

    print "ü§î –ó–∞–ø—Ä–æ—Å: #{prompt}\n"
    print "ü§ñ –û—Ç–≤–µ—Ç:\n"

    response = chat.say(prompt)
    puts response.content
    puts "üí∞ –¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: #{response.usage[:total_tokens]}" if response.usage
  end

  def self.demonstrate_translation
    puts "\nüåç –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞"
    puts "-" * 30

    chat = RubyLLM.chat.new(
      system: "–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫. –ü–µ—Ä–µ–≤–æ–¥–∏ —Ç–æ—á–Ω–æ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ."
    )

    prompt = "–ü–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π: '–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞? –Ø —Å–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω–æ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É—é!'"

    print "ü§î –ó–∞–ø—Ä–æ—Å: #{prompt}\n"
    print "ü§ñ –û—Ç–≤–µ—Ç: "

    response = chat.say(prompt)
    puts response.content
    puts "üí∞ –¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: #{response.usage[:total_tokens]}" if response.usage
  end

  def self.demonstrate_text_analysis
    puts "\nüîç –°—Ü–µ–Ω–∞—Ä–∏–π 4: –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞"
    puts "-" * 30

    chat = RubyLLM.chat.new(
      system: "–¢—ã - –∞–Ω–∞–ª–∏—Ç–∏–∫ —Ç–µ–∫—Å—Ç–∞. –ü—Ä–æ–≤–æ–¥–∏ –∫—Ä–∞—Ç–∫–∏–π –∏ —Ç–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑."
    )

    text = "Ruby - —ç—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π, –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–≤–æ–µ–π –ø—Ä–æ—Å—Ç–æ—Ç–æ–π –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å—é."
    prompt = "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç: –æ–ø—Ä–µ–¥–µ–ª–∏ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞. –¢–µ–∫—Å—Ç: #{text}"

    print "ü§î –ó–∞–ø—Ä–æ—Å: #{prompt}\n"
    print "ü§ñ –û—Ç–≤–µ—Ç: "

    response = chat.say(prompt)
    puts response.content
    puts "üí∞ –¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: #{response.usage[:total_tokens]}" if response.usage
  end

  def self.demonstrate_embeddings
    puts "\nüî¢ –°—Ü–µ–Ω–∞—Ä–∏–π 5: –°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤"
    puts "-" * 30

    texts = [
      "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Ruby",
      "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å Rails",
      "–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã",
      "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏"
    ]

    print "ü§î –°–æ–∑–¥–∞—é —ç–º–±–µ–¥–¥–∏–Ω–≥–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤...\n"

    texts.each_with_index do |text, index|
      begin
        embedding = RubyLLM.embed(text, model: 'text-embedding-3-large')
        puts "‚úÖ –¢–µ–∫—Å—Ç #{index + 1}: #{text}"
        puts "   –†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –≤–µ–∫—Ç–æ—Ä–∞: #{embedding.vector.length}"
        puts "   –ü–µ—Ä–≤—ã–µ 5 –∑–Ω–∞—á–µ–Ω–∏–π: #{embedding.vector.first(5).map { |v| v.round(4) }}"
        puts
      rescue => e
        puts "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–∞ –¥–ª—è '#{text}': #{e.message}"
      end
    end
  end
end

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞
if __FILE__ == $0
  if ARGV.include?('--demo')
    # –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    ChatScenarios.run_all_scenarios
  else
    # –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
    bot = BasicChatBot.new
    bot.start
  end
end